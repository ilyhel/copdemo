import { UntypedNode } from "./untypedNode";
/** Defines the interface for defining an untyped object value. */
export interface UntypedObject extends UntypedNode {
    /**
     * Gets the value of the UntypedNode as a Record<string, UntypedNode>.
     */
    getValue(): Record<string, UntypedNode>;
}
/**
 * Type guard to assert that an object instance is an UntypedObject.
 * @param node The object to check.
 * @return boolean indicating if the node is an UntypedObject.
 */
export declare function isUntypedObject(node: UntypedNode): node is UntypedObject;
/**
 * Factory to create an UntypedObject from a Record<string, UntypedNode>.
 * @param value The Record<string, UntypedNode> value to create from.
 * @return The created UntypedObject.
 */
export declare function createUntypedObject(value: Record<string, UntypedNode>): UntypedObject;
//# sourceMappingURL=untypedObject.d.ts.map